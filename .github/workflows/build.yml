name: build
run-name: Build docker container

on:

  pull_request:
    branches: [ master ]
    paths:
      - 'pipelines/kubernetes/hello-kubernetes/deploy/dockerfile/**'
      - .github/workflows/build.yml

  push:
    paths:
      - 'pipelines/kubernetes/hello-kubernetes/deploy/dockerfile/**'
      - .github/workflows/build.yml
    branches:
      - master
    tags: [ '*' ]

  workflow_dispatch:

env:
  IMAGE_REPOSITORY: 'constantin07/hello-kubernetes'
  PLATFORMS: 'linux/amd64' # 'linux/amd64,linux/arm64'

permissions: read-all

concurrency: build-${{ github.head_ref || github.ref_name }}

jobs:
  build:
    runs-on: ubuntu-24.04
    permissions:
      security-events: write
      contents: write  # Allow to push tags
    defaults:
      run:
        working-directory: pipelines/kubernetes/hello-kubernetes/deploy/dockerfile
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          # fetch all history for all tags and branches required by GitVersion
          fetch-depth: 0

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v4.1.0
        with:
          versionSpec: '6.1.0'
          includePrerelease: true
          preferLatestVersion: true

      - name: Determine Version
        uses: gittools/actions/gitversion/execute@v4.1.0
        with:
          configFilePath: pipelines/kubernetes/hello-kubernetes/deploy/GitVersion.yml

      - name: Display version
        run: |
          echo "SemVer: ${{ env.GitVersion_SemVer }}"
          echo "::notice title=Version::Version is ${{ env.GitVersion_SemVer }}"

      - name: Check if tag already exists
        id: check
        run: |
          TAG_EXISTS=$(git ls-remote --tags origin "refs/tags/${{ env.GitVersion_SemVer }}" | wc -l)
          echo "exists=$TAG_EXISTS" >> "$GITHUB_OUTPUT"
          if [[ $TAG_EXISTS -gt 0 ]]; then
            echo "❌ Tag $GitVersion_SemVer already exists. Failing."
            exit 1
          else
            echo "✅ Tag $GitVersion_SemVer does not exist. Proceeding."
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_REPOSITORY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          ecr: false

      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          context: pipelines/kubernetes/hello-kubernetes/deploy/dockerfile
          platforms: "${{ env.PLATFORMS }}"
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.IMAGE_REPOSITORY }}:${{ env.GitVersion_SemVer }}
          labels: ${{ steps.meta.outputs.labels }}
          load: false

      - name: Buildx load (for Trivy scan)
        run: docker buildx build --load -t ${{ env.IMAGE_REPOSITORY }}:${{ env.GitVersion_SemVer }} .

      - name: Run trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_REPOSITORY }}:${{ env.GitVersion_SemVer }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Docker push
        run: |
          docker buildx build --platform "${{ env.PLATFORMS }}" --push -t ${{ env.IMAGE_REPOSITORY }}:${{ env.GitVersion_SemVer }} .

      - name: Push tag
        if: github.ref_name == 'master' && steps.check.outputs.exists == '0'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag ${{ env.GitVersion_SemVer }}
          git push origin ${{ env.GitVersion_SemVer }}
