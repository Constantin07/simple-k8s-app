name: build-container
run-name: Build docker container

on:
  pull_request:
    branches: [ master ]
    paths:
      - 'pipelines/kubernetes/hello-kubernetes/deploy/dockerfile/**'
      - .github/workflows/build-container.yml

  push:
    paths:
      - 'pipelines/kubernetes/hello-kubernetes/deploy/dockerfile/**'
      - .github/workflows/build-container.yml
    branches: [ master ]
    tags: [ '*' ]

  workflow_dispatch:

env:
  IMAGE_REPOSITORY: 'constantin07/hello-kubernetes'
  IMAGE_NAME: 'constantin07/hello-kubernetes:latest'

jobs:
  Build:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    defaults:
      run:
        working-directory: pipelines/kubernetes/hello-kubernetes/deploy/dockerfile
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.IMAGE_REPOSITORY }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get short commit SHA
        id: var
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "::set-output name=short_sha::$calculatedSha"

      - name: Docker build
        uses: docker/build-push-action@v4
        with:
          context: pipelines/kubernetes/hello-kubernetes/deploy/dockerfile
          platforms: 'linux/amd64,linux/arm64'
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ env.IMAGE_REPOSITORY }}:${{ steps.var.outputs.short_sha }}
            ${{ env.IMAGE_REPOSITORY }}:latest
          labels: ${{ steps.meta.outputs.labels }}
          load: false

      - name: Buildx load (for Trivy scan)
        run: docker buildx build --load -t ${{ env.IMAGE_REPOSITORY }}:${{ steps.var.outputs.short_sha }} .

      - name: Run trivy scan
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_REPOSITORY }}:${{ steps.var.outputs.short_sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Docker push
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 --push -t ${{ env.IMAGE_REPOSITORY }}:${{ steps.var.outputs.short_sha }} .
          docker buildx build --platform linux/amd64,linux/arm64 --push -t ${{ env.IMAGE_REPOSITORY }}:latest .
